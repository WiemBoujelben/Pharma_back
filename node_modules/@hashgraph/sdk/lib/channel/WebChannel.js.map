{"version":3,"file":"WebChannel.js","sources":["../../src/channel/WebChannel.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport { ALL_WEB_NETWORK_NODES } from \"../constants/ClientConstants.js\";\nimport GrpcServiceError from \"../grpc/GrpcServiceError.js\";\nimport GrpcStatus from \"../grpc/GrpcStatus.js\";\nimport HttpError from \"../http/HttpError.js\";\nimport HttpStatus from \"../http/HttpStatus.js\";\nimport Channel, { encodeRequest, decodeUnaryResponse } from \"./Channel.js\";\n\nexport default class WebChannel extends Channel {\n    /**\n     * @param {string} address\n     */\n    constructor(address) {\n        super();\n\n        /**\n         * @type {string}\n         * @private\n         */\n        this._address = address;\n    }\n\n    /**\n     * @override\n     * @returns {void}\n     */\n    close() {\n        // do nothing\n    }\n\n    /**\n     * @override\n     * @protected\n     * @param {string} serviceName\n     * @returns {import(\"protobufjs\").RPCImpl}\n     */\n    _createUnaryClient(serviceName) {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        return async (method, requestData, callback) => {\n            try {\n                const response = await fetch(\n                    `${this._address}/proto.${serviceName}/${method.name}`,\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"content-type\": \"application/grpc-web+proto\",\n                            \"x-user-agent\": \"hedera-sdk-js/v2\",\n                            \"x-grpc-web\": \"1\",\n                        },\n                        body: encodeRequest(requestData),\n                    },\n                );\n\n                if (!response.ok) {\n                    const error = new HttpError(\n                        HttpStatus._fromValue(response.status),\n                    );\n                    callback(error, null);\n                }\n\n                // Check headers for gRPC errors\n                const grpcStatus = response.headers.get(\"grpc-status\");\n                const grpcMessage = response.headers.get(\"grpc-message\");\n\n                if (grpcStatus != null && grpcMessage != null) {\n                    const error = new GrpcServiceError(\n                        GrpcStatus._fromValue(parseInt(grpcStatus)),\n                        ALL_WEB_NETWORK_NODES[this._address].toString(),\n                    );\n                    error.message = grpcMessage;\n                    callback(error, null);\n                }\n\n                const responseBuffer = await response.arrayBuffer();\n                const unaryResponse = decodeUnaryResponse(responseBuffer);\n\n                callback(null, unaryResponse);\n            } catch (error) {\n                const err = new GrpcServiceError(\n                    // retry on grpc web errors\n                    GrpcStatus._fromValue(18),\n                    ALL_WEB_NETWORK_NODES[this._address].toString(),\n                );\n                callback(err, null);\n            }\n        };\n    }\n}\n"],"names":["WebChannel","Channel","constructor","address","super","this","_address","close","_createUnaryClient","serviceName","async","method","requestData","callback","response","fetch","name","headers","body","encodeRequest","ok","HttpError","HttpStatus","_fromValue","status","grpcStatus","get","grpcMessage","error","GrpcServiceError","GrpcStatus","parseInt","ALL_WEB_NETWORK_NODES","toString","message","responseBuffer","arrayBuffer","decodeUnaryResponse"],"mappings":"0SASe,MAAMA,UAAmBC,EAIpC,WAAAC,CAAYC,GACRC,QAMAC,KAAKC,SAAWH,CACxB,CAMI,KAAAI,GAEJ,CAQI,kBAAAC,CAAmBC,GAEf,OAAOC,MAAOC,EAAQC,EAAaC,KAC/B,IACI,MAAMC,QAAiBC,MACnB,GAAGV,KAAKC,kBAAkBG,KAAeE,EAAOK,OAChD,CACIL,OAAQ,OACRM,QAAS,CACL,eAAgB,6BAChB,eAAgB,mBAChB,aAAc,KAElBC,KAAMC,EAAcP,KAI5B,IAAKE,EAASM,GAAI,CAIdP,EAHc,IAAIQ,EACdC,EAAWC,WAAWT,EAASU,SAEnB,KACpC,CAGgB,MAAMC,EAAaX,EAASG,QAAQS,IAAI,eAClCC,EAAcb,EAASG,QAAQS,IAAI,gBAEzC,GAAkB,MAAdD,GAAqC,MAAfE,EAAqB,CAC3C,MAAMC,EAAQ,IAAIC,EACdC,EAAWP,WAAWQ,SAASN,IAC/BO,EAAsB3B,KAAKC,UAAU2B,YAEzCL,EAAMM,QAAUP,EAChBd,EAASe,EAAO,KACpC,CAEgB,MAAMO,QAAuBrB,EAASsB,cAGtCvB,EAAS,KAFawB,EAAoBF,GAG7C,CAAC,MAAOP,GAMLf,EALY,IAAIgB,EAEZC,EAAWP,WAAW,IACtBS,EAAsB3B,KAAKC,UAAU2B,YAE3B,KAC9B,EAEA"}